{"version":3,"sources":["components/Flight/Flight.module.css","components/Drone/tower.svg","components/Drone/Drone.js","style-constants.js","components/Drone/index.js","dataProcessing.js","components/GoogleMap/MapWrapper.js","components/Data/Towers/Towers.js","components/Data/Flight1/flight_1.js","components/Square/Square.js","components/GoogleMap/GoogleMap.js","components/Chart/Chart.js","components/Data/Packets/packets.js","components/PacketsChart/PacketsChart.js","components/Flight/Flight.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","mapContainer","treeContainer","chartContainer","displayContainer","floatDown","__webpack_require__","p","Drone","props","concat","scale","react_default","a","createElement","src","ReactLogo","alt","COLORS","gray64","green","yellow","orange","red","keyframes","_templateObject","DroneStyle","_ref","network","color","DroneInGroupStyled","styled","div","Drone_templateObject","components_Drone_Drone","this","React","PureComponent","defaultProps","inGroup","flight","require","ParseDMS","input","parts","replace","split","degrees","minutes","seconds","direction","dd","parseInt","ConvertDMSToDD","result","tmp","index","i","si","lng","Set","st","push","add","TECNOLOGIA","l","LONGITUD","id","lat","LATITUD","MapWrapper","MapWrapper_templateObject","data","towers","allTowers","tower","Lat","Lon","getAllTowers","cellIdsToTower","allCells","cell","Cells","getAllCells","cellIdsToTowerId","getCellIdsToTowerId","sinr_values","rsrp_values","prevTower","changePoints","Latitude","Longitude","date","Date","unix_time","time","getHours","getMinutes","getSeconds","value","RSRPs","type","SINRs","undefined","CellID","changePoints_1","towers_1","flight_1_towers","cells","prevCellId","indi","ind","_data$ind","cellArray","prev","length","convertTo2DArrayTower","flight_1_sinr","neg","prevIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_ref2","err","return","convertTo2DArraySinr","startPoint","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref4","convertTo2DArrayRsrp","endPoint","Square","width","height","x","y","style","fill","stroke","strokeWidth","MAP","defaultZoom","defaultCenter","options","styles","mapStyles","maxZoom","colors","GoogleMap","activeTowers","GoogleMap_MapWrapper","lib_default","yesIWantToUseGoogleMapApiInternals","bootstrapURLKeys","key","process","onGoogleApiLoaded","google","path","maps","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","setMap","map","point","item","components_Drone","components_Square_Square","Chart","sinr","divide","heading","_useState","useState","_useState2","Object","slicedToArray","config","padding","xField","yField","slider","start","end","annotations","lineDash","meta","sale","min","max","tickCount","sync","x1","x2","yAxis","nice","className","Fragment","line","assign","packets","udp","prevUnixTime","prevUdp","size","voice_counter","init","j","shift","final","packets_ref","apply","toConsumableArray","udp_counter","udpP","PacketsChart","autofit","shape","colorField","xAxis","grid","scatter","console","log","treeData","title","Flight","setValue","_useState3","SINR1","_useState4","setSINRs","_useState5","window","localStorage","getItem","_useState6","flightValue","setFlightValue","backgroundColor","tree_select","showSearch","dropdownStyle","maxHeight","overflow","placeholder","allowClear","treeDefaultExpandAll","onChange","newValue","es_radio","Group","e","target","setItem","location","reload","Button","GoogleMap_GoogleMap","Chart_Chart","RSRP1","PacketsChart_PacketsChart","App","Flight_Flight","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c002c252.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapContainer\":\"Flight_mapContainer__3rDsk\",\"treeContainer\":\"Flight_treeContainer__sgAqP\",\"chartContainer\":\"Flight_chartContainer__2P2Hp\",\"displayContainer\":\"Flight_displayContainer__3JXK1\",\"floatDown\":\"Flight_floatDown__3vqzY\"};","module.exports = __webpack_public_path__ + \"static/media/tower.32bd88fb.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactLogo from './tower.svg';\nfunction Drone(props) {\n  const styles = {\n    transform: `scale(${props.scale})`,\n  };\n\n  return (\n    <img src={ReactLogo} alt=\"React Logo\" />\n  );\n}\n\nDrone.propTypes = {\n  scale: PropTypes.string,\n};\n\nexport default Drone;\n","import { keyframes } from 'styled-components';\n\nexport const COLORS = {\n  gray64: '#a3a3a3',\n  green: '#00ff00',\n  yellow: '#ffff00',\n  orange: '#ffa500',\n  red: '#ff0000',\n};\n\nexport const easyMove = keyframes`\n  from {\n    transform: translateY(-20%);\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DroneImage from './Drone';\nimport styled from 'styled-components';\nimport { COLORS } from '../../style-constants';\n\n// {'LTE', 'LTE ', 'UMTS', 'GSM'}\nfunction DroneStyle({ network }) {\n    let color = COLORS.gray64;\n    if (network == 'LTE') {\n        color = COLORS.green;\n    } else if (network == 'LTE ') {\n        color = COLORS.green;\n    } else if (network == 'UMTS') {\n        color = COLORS.orange;\n    } else if (network == 'GSM') {\n        color = COLORS.yellow;\n    }\n    const DroneInGroupStyled = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 25px;\n    height: 25px;\n    margin-left: -7px;\n    font-size: 14px;\n    color: #fff;\n    text-transform: uppercase;\n    border-radius: 50%;\n    background-color: ${color};\n    background-size: cover;\n    background-position: center;\n    `;\n\n    return (\n        <DroneInGroupStyled>\n              <DroneImage scale=\"0.5\" />\n            </DroneInGroupStyled>\n        );\n}\n\nclass Drone extends React.PureComponent {\n  // eslint-disable-line react/prefer-stateless-function\n  static defaultProps = {\n    inGroup: false,\n  };\n\n  render() {\n    return (\n      <div><DroneStyle network={this.props.network} /></div>\n    );\n  }\n}\n\nDrone.propTypes = {\n  inGroup: PropTypes.bool,\n};\n\nexport default Drone;\n","\nconst flight = require('./radiobases.json');\nfunction ConvertDMSToDD(degrees, minutes, seconds, direction) {\n    degrees = parseInt(degrees);\n    minutes = parseInt(minutes);\n    seconds = parseInt(seconds);\n    var dd = degrees + minutes/60 + seconds/(60*60);\n    if (direction == \"S\" || direction == \"W\") {\n        dd = dd * -1;\n    } // Don't do anything for N or E\n    return dd;\n}\n\nfunction ParseDMS(input) {\n    input = input.replace(\"' '\", \"'' \");\n    // input = input.replace(\".00\", \"\");\n    var parts = input.split(/[^\\d\\w]+/);\n    var lat = ConvertDMSToDD(parts[0], parts[1], parts[2], parts[4]);\n    // var lng = ConvertDMSToDD(parts[4], parts[5], parts[6], parts[7]);\n    return lat;\n}\n\nfunction parseData(dt) {\n    var result = [];\n\n    for(var i in dt)\n        result.push([i, dt [i]]);\n\n    var finalResult = [];\n    for(var i = 0; i < result.length && i < 500; i++) {\n    finalResult.push({\n        id: i,\n        lat: result[i][1].Lat,\n        lng: result[i][1].Lon,\n    });\n    }\n\n    return finalResult;\n}\n\nfunction parseFlightData(dt) {\n\n    var finalResult = [];\n    var index = 0\n    for(var i in dt) {\n        if (dt[i]['altitude(m)'] == 0 ) {\n            break;\n        }\n        // if (index > 500) {\n        //     break;\n        // }\n        index++;\n        finalResult.push({\n            id: i,\n            lat: dt[i].latitude,\n            lng: dt[i].longitude,\n            rsrp: dt[i].RSRP,\n            cell: dt[i].CellID,\n\n        });\n    }\n    var newResult = [];\n    for(var i = 0; i < finalResult.length; i++) {\n        if (newResult.length == 0) {\n            newResult.push(finalResult[i]);\n        } else {\n            var last = newResult[newResult.length - 1];\n            if (!(last.lat - finalResult[i].lat < 0.00004 && last.lat - finalResult[i].lat > -0.00004)) {\n                newResult.push(finalResult[i]);\n            }\n        }\n    }\n    return newResult;\n}\n\n\nvar result = [];\nvar tmp = [];\nvar index = 0\nvar si = 0\nfor(var i in flight) {\n    si++;\n}\nvar lng = new Set();\nvar count = 0;\nvar st = new Set();\nfor(var i in flight) {\n    if (flight[i]['altitude(m)'] == 0 ) {\n        break;\n    }\n    if (index > 3000) {\n        result.push(tmp);\n        break;\n    }\n    if (index% 500 == 0) {\n        result.push(tmp);\n        tmp = [];\n    }\n    index++;\n    st.add(flight[i].TECNOLOGIA);\n    var l = ParseDMS(flight[i].LONGITUD)\n    tmp.push({\n        id: i,\n        lat: ParseDMS(flight[i].LATITUD),\n        lng: l,\n        network: flight[i].TECNOLOGIA,\n    });\n    lng.add(l);\n}\n\nexport const susolvkaCoords = { lat: -0.15, lng: -78.49305555555556 };\n\nexport const markersData = result[1];\nexport const data2 = result[2];\nexport const data3 = result[3];\nexport const data4 = result[4];\nexport const data5 = result[5];","import styled from 'styled-components';\n\nconst MapWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default MapWrapper;\n","const data = require('./Towers.json');\n\nfunction getAllTowers() {\n    let allTowers = [];\n    for (let tower in data) {\n        allTowers.push({\"id\": tower, \"Lat\": data[tower].Lat, \"Lon\": data[tower].Lon});\n    }\n    return allTowers;\n}\n\nfunction getAllCells() {\n    let allCells = [];\n    for (let tower in data) {\n        for (let cell in data[tower].Cells) {\n            allCells.push({\"id\": cell, \"Lat\": data[tower].Cells[cell].Lat, \"Lon\": data[tower].Cells[cell].Lon});\n        }\n    }\n    return allCells;\n}\n\nfunction getCellIdsToTowerId() {\n    let cellIdsToTowerId = {};\n    for (let tower in data) {\n        for (let cell in data[tower].Cells) {\n            cellIdsToTowerId[cell] = {\"id\": tower, \"Lat\": data[tower].Lat, \"Lon\": data[tower].Lon};\n        }\n    }\n    return cellIdsToTowerId;\n}\n\nexport const towers = getAllTowers();\nexport const cells = getAllCells();\nexport const cellIdsToTower= getCellIdsToTowerId();\n","import { cellIdsToTower } from '../Towers/Towers';\n\nconst data = require('./flight_1.json');\nlet flight = [];\nlet sinr_values = [];\nlet rsrp_values = [];\nlet prevTower = null;\nlet changePoints = {};\nlet towers = {};\nlet index = 0;\nfor (var i in data) {\n    flight.push({ \"lat\": data[i].Latitude, \"lng\": data[i].Longitude });\n    // Convert unix time to time\n    var date = new Date(data[i].unix_time * 1000);\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var seconds = date.getSeconds();\n    var time = hours + ':' + minutes + ':' + seconds;\n\n    rsrp_values.push({ \"value\": data[i].RSRPs, \"type\": \"RSRP\", \"unix_time\": time });\n    sinr_values.push({ \"value\": data[i].SINRs, \"type\": \"SINR\", \"unix_time\": time });\n    // Note the points where new cell is connected\n    if (cellIdsToTower[data[i].CellID] !== undefined && cellIdsToTower[data[i].CellID].id !== prevTower) {\n        // changePoints[index] = [{ \"lat\": data[i].Latitude, \"lng\": data[i].Longitude }, { \"lat\": cellIdsToTower[data[i].CellID].Lat, \"lng\": cellIdsToTower[data[i].CellID].Lon }];\n        // index++;\n        // if (index > 1) {\n        //     let prev = index - 2;\n        //     if (index > 2) {\n        //         prev = index - 3;\n        //     }\n        //     changePoints[index] = [{ \"lat\": data[i].Latitude, \"lng\": data[i].Longitude }, changePoints[prev][1]];\n        //     index++;\n\n        // }\n\n        prevTower = cellIdsToTower[data[i].CellID].id;\n        towers[cellIdsToTower[data[i].CellID].id] = true;\n    }\n}\n\nconst getTime = (unix_time) => {\n    var date = new Date(unix_time * 1000);\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var seconds = date.getSeconds();\n    var time = hours + ':' + minutes + ':' + seconds;\n    return time;\n}\n\n\nconst convertTo2DArrayTower = (data) => {\n    const cells = [];\n\n    let prevCellId = -1;\n    let indi = 0;\n    for (var ind in data) {\n      const { Latitude, Longitude, CellID} = data[ind];\n  \n      if (CellID !== prevCellId) {\n        const cellArray = { CellID, data: [[]] };\n        cells.push(cellArray);\n  \n        prevCellId = CellID;\n        if (cellIdsToTower[data[ind].CellID] !== undefined) {\n            changePoints[indi] = [{ \"lat\": data[ind].Latitude, \"lng\": data[ind].Longitude }, { \"lat\": cellIdsToTower[data[ind].CellID].Lat, \"lng\": cellIdsToTower[data[ind].CellID].Lon }];\n            indi++;\n            if (indi > 1) {\n                let prev = indi - 2;\n                if (indi > 2) {\n                    prev = indi - 3;\n                }\n                changePoints[indi] = [{ \"lat\": data[ind].Latitude, \"lng\": data[ind].Longitude }, changePoints[prev][1]];\n                indi++;\n    \n            }\n        }\n      }\n  \n      cells[cells.length - 1].data[0].push({ \"lat\": Latitude, \"lng\": Longitude });\n    }\n\n    return cells;\n  };\n\n  \n  const convertTo2DArraySinr = (data) => {\n    const cells = [\n      { neg: -10, data: [] },\n      { neg: -5, data: [] },\n      { neg: 0, data: [] },\n      { neg: 5, data: [] },\n      { neg: 10, data: [] }\n    ];\n    let prevIndex = -1;\n    for (const { Latitude, Longitude, CellID, SINRs } of data) {\n      let index;\n      if (SINRs < -10) {\n        index = 0;\n      } else if (SINRs < -5) {\n        index = 1;\n      } else if (SINRs < 0) {\n        index = 2;\n      } else if (SINRs < 5) {\n        index = 3;\n      } else {\n        index = 4;\n      }\n  \n      if (index !== prevIndex) {\n        cells[index].data.push([{ \"lat\": Latitude, \"lng\": Longitude }]);\n        prevIndex = index;\n      } else {\n        cells[index].data[cells[index].data.length - 1].push({ \"lat\": Latitude, \"lng\": Longitude });\n      }\n    }\n    return cells;\n  }\n\n  const convertTo2DArrayRsrp = (data) => {\n    const cells = [\n      { neg: -70, data: [] },\n      { neg: -65, data: [] },\n      { neg: -60, data: [] },\n      { neg: -55, data: [] },\n      { neg: -50, data: [] }\n    ];\n    let prevIndex = -1;\n    for (const { Latitude, Longitude, CellID, RSRPs } of data) {\n      let index;\n      if (RSRPs < -70) {\n        index = 0;\n      } else if (RSRPs < -65) {\n        index = 1;\n      } else if (RSRPs < -60) {\n        index = 2;\n      } else if (RSRPs < -55) {\n        index = 3;\n      } else {\n        index = 4;\n      }\n  \n      if (index !== prevIndex) {\n        cells[index].data.push([{ \"lat\": Latitude, \"lng\": Longitude }]);\n        prevIndex = index;\n      } else {\n        cells[index].data[cells[index].data.length - 1].push({ \"lat\": Latitude, \"lng\": Longitude });\n      }\n    }\n    return cells;\n  }\n  \n\nexport const changePoints_1 = changePoints;\n\nexport const towers_1 = towers;\nexport const flight_1 = flight;\nexport const SINRs = sinr_values;\nexport const RSRPs = rsrp_values;\nexport const flight_1_towers = convertTo2DArrayTower(data);\nexport const flight_1_sinr = convertTo2DArraySinr(data);\nexport const flight_1_rsrps = convertTo2DArrayRsrp(data);\nexport const startPoint = { \"lat\": data[0].Latitude, \"lng\": data[0].Longitude };\nexport const endPoint = { \"lat\": data[data.length - 1].Latitude, \"lng\": data[data.length - 1].Longitude };\n\nexport default data;\n\n// RSRP, SINR, LTE Voice","import React from 'react';\n\nconst Square = ({color}) => {\n  return (\n    <svg width=\"100\" height=\"100\">\n      <rect x=\"0\" y=\"0\" width=\"7\" height=\"7\"\n        style={{fill: color, stroke: '#000', strokeWidth: 1}} />\n    </svg>\n  );\n}\n\nexport default Square;\n","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport Drone from '../Drone';\n\nimport mapStyles from './mapStyles.json';\nimport { markersData } from '../../dataProcessing';\n\nimport MapWrapper from './MapWrapper';\nimport { flight_1 } from '../Data/Flight1/flight_1';\nimport Square from '../Square/Square';\n// const env = dotenv.config().parsed;\nconst MAP = {\n  defaultZoom: 17,\n  defaultCenter: {\"lat\": 40.694388000000,\"lng\": -73.956820000000},\n  options: {\n    styles: mapStyles,\n    maxZoom: 19,\n  },\n};\n\nconst colors = [\n  '#f44336', // red\n  '#e91e63', // pink\n  '#9c27b0', // purple\n  '#673ab7', // deep purple\n  '#3f51b5', // indigo\n  '#2196f3', // blue\n  '#03a9f4', // light blue\n  '#00bcd4', // cyan\n  '#009688', // teal\n  '#4caf50', // green\n];\n\n\nexport const GoogleMap = ({flight, towers, activeTowers, changePoints, startPoint, endPoint}) => {\n\n  const handleGoogleMapApi = (google) => {\n\n    for(var path in flight) {\n      for(var i = 0; i < flight[path].data.length; i++) {\n        var flightPath = new google.maps.Polyline({\n            path: flight[path].data[i],\n            geodesic: true,\n            strokeColor: colors[path % colors.length],\n            strokeOpacity: 1,\n            strokeWeight: 5\n          });\n  \n        flightPath.setMap(google.map);\n      }\n    }\n    \n\n    // Loop through changeLines and draw lines\n    for(var point in changePoints) {\n      new google.maps.Polyline({\n        path: changePoints[point],\n        geodesic: true,\n        strokeColor: '#6ACCF0',\n        strokeOpacity: 1,\n        strokeWeight: 2\n      }).setMap(google.map);\n    }\n  }\n\n    return (\n      <MapWrapper>\n        <GoogleMapReact\n          defaultZoom={MAP.defaultZoom}\n          defaultCenter={MAP.defaultCenter}\n          // onChange={this.handleMapChange}\n          yesIWantToUseGoogleMapApiInternals\n          bootstrapURLKeys={{ key: process.env.REACT_APP_MAP }}\n          onGoogleApiLoaded={handleGoogleMapApi}\n        >\n\n          {\n            towers.map(item => {\n              return (\n                <Drone\n                  key={item.id}\n                  lat={item.Lat}\n                  lng={item.Lon}\n                  network={activeTowers[item.id] ? 'LTE' : 'UMTS'}\n                />\n              );\n            }\n            )\n          }\n          <Square lat={startPoint.lat} lng={startPoint.lng} color={'white'} />\n          <Square lat={endPoint.lat} lng={endPoint.lng} color={'#FF0000'} />\n\n\n\n        </GoogleMapReact>\n      </MapWrapper>\n    );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Line } from '@ant-design/plots';\nimport styles from './Chart.module.css';\n\nexport const Chart = ({sinr, divide, heading}) => {\n  const [data, setData] = useState(sinr);\n  const config = {\n    data,\n    padding: 'auto',\n    xField: 'unix_time',\n    yField: 'value',\n    slider: {\n      start: 0.1,\n      end: 0.5,\n    },\n    annotations: [\n      // {\n      //   type: 'regionFilter',\n      //   start: ['min', divide],\n      //   end: ['max', 'min'],\n      //   color: '#F4664A',\n      // },\n      {\n        type: 'line',\n        start: ['min', divide[0]],\n        end: ['max', divide[0]],\n        style: {\n          stroke: 'green',\n          lineDash: [4, 4],\n        },\n      },\n      {\n        type: 'line',\n        start: ['min', divide[1]],\n        end: ['max', divide[1]],\n        style: {\n          stroke: 'yellow',\n          lineDash: [4, 4],\n        },\n      },\n      {\n        type: 'line',\n        start: ['min', divide[2]],\n        end: ['max', divide[2]],\n        style: {\n          stroke: 'orange',\n          lineDash: [4, 4],\n        },\n      },\n      {\n        type: 'line',\n        start: ['min', divide[3]],\n        end: ['max', divide[3]],\n        style: {\n          stroke: 'red',\n          lineDash: [4, 4],\n        },\n      },\n    ],\n    meta: {\n      sale: {\n        min: 0,\n        max: 100,\n      },\n      tickCount: 4,\n      x: { sync: true },\n      y: { sync: true },\n      x1: { sync: 'x1' },\n      x2: { sync: 'x1' },\n    },\n    yAxis: {\n      nice: true,\n      max: -40\n    }\n  };\n\n  return (\n    <div className='chart-heading'>\n      <>\n        <h4>{heading}</h4>\n      </>\n      <Line {...config} height={300}/>\n    </div>\n  );\n};\n","const data = require(\"./packets.json\");\nlet packets = [];\nlet udp = {};\n\nlet prevUnixTime = data[0].unix_time;\nlet prevUdp = -1;\nlet result = [[]];\nlet size = 1;\nfor (var i in data) {\n  if (data[i].voice_counter == null) {\n    continue;\n  }\n  if (parseInt(data[i].voice_counter) < parseInt(prevUdp)) {\n    result.push([]);\n    size++;\n  }\n  // let s = result[size - 1].length;\n  // while (s != data[i].voice_counter) {\n  //   result[size - 1].push(-1);\n  //   s++;\n  // }\n\n  result[size - 1].push(data[i].unix_time - prevUnixTime);\n\n  prevUdp = data[i].voice_counter;\n}\n\nfor (var i in result) {\n  let init = result[i][0];\n  for (var j in result[i]) {\n    let tmp = result[i][j];\n    result[i][j] = result[i][j] - init;\n    init = tmp;\n  }\n  result[i].shift();\n}\n\nlet final = [];\nresult = [].concat(...result);\nfor (var i in result) {\n  final.push({\n    index: i,\n    value: result[i],\n    type: \"voice\",\n  });\n}\n\nprevUdp = -1;\nresult = [[]];\nsize = 1;\nfor (var i in data) {\n  if (data[i].udp_counter == null) {\n    continue;\n  }\n  if (parseInt(data[i].udp_counter) < parseInt(prevUdp)) {\n    result.push([]);\n    size++;\n  }\n  // let s = result[size - 1].length;\n  // while (s != data[i].udp_counter) {\n  //   result[size - 1].push(-1);\n  //   s++;\n  // }\n\n  result[size - 1].push(data[i].unix_time - prevUnixTime);\n\n  prevUdp = data[i].udp_counter;\n}\n\nfor (var i in result) {\n  let init = result[i][0];\n  for (var j in result[i]) {\n    let tmp = result[i][j];\n    result[i][j] = result[i][j] - init;\n    init = tmp;\n  }\n  result[i].shift();\n}\n\nresult = [].concat(...result);\n\nfor (var i in result) {\n  final.push({\n    index: i,\n    value: result[i],\n    type: \"udp\",\n  });\n}\n\nexport const udpP = final;\n\nfor (var i in data) {\n  udp[data[i].udp_counter] = data[i].unix_time;\n}\n\nfor (var i in data) {\n  packets.push({\n    unix_time: data[i].unix_time,\n    type: \"udp\",\n    value: 0,\n  });\n  packets.push({\n    unix_time: data[i].unix_time,\n    type: \"voice\",\n    value: udp[data[i].voice_counter] - data[i].unix_time,\n  });\n}\n\nexport const pack = packets;\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Line, Scatter } from \"@ant-design/plots\";\nimport styles from \"./PacketsChart.module.css\";\n\nexport const PacketsChart = ({ sinr, heading }) => {\n  const [data, setData] = useState(sinr);\n  //   const config = {\n  //     data,\n  //     padding: \"auto\",\n  //     xField: \"unix_time\",\n  //     yField: \"udp\",\n  //     slider: {\n  //       start: 0.1,\n  //       end: 0.5,\n  //     },\n  //   };\n\n  //   return (\n  //     <div className=\"chart-heading\">\n  //       <>\n  //         <h4>{heading}</h4>\n  //       </>\n  //       <Line {...config} height={300} />\n  //     </div>\n  //   );\n\n  const config = {\n    // appendPadding: 10,\n    autofit: true,\n    data,\n    xField: \"index\",\n    yField: \"value\",\n    shape: \"circle\",\n    colorField: \"type\",\n    size: 4,\n    yAxis: {\n      //   min: 0,\n      //   max: 4,\n      nice: true,\n      line: {\n        style: {\n          stroke: \"#aaa\",\n        },\n      },\n    },\n    xAxis: {\n      //   min: -100,\n      grid: {\n        line: {\n          style: {\n            stroke: \"#eee\",\n          },\n        },\n      },\n      line: {\n        style: {\n          stroke: \"#aaa\",\n        },\n      },\n    },\n    slider: {\n      start: 0.1,\n      end: 0.5,\n    },\n  };\n\n  return <Scatter {...config} />;\n};\n","import React, { useState } from \"react\";\n\nimport { GoogleMap } from \"../GoogleMap/GoogleMap\";\nimport { Radio, TreeSelect } from \"antd\";\nimport styles from \"./Flight.module.css\";\nimport {\n  endPoint,\n  flight_1_sinr,\n  flight_1_towers,\n  startPoint,\n} from \"../Data/Flight1/flight_1\";\nimport { Chart } from \"../Chart/Chart\";\nimport { SINRs as SINR1 } from \"../Data/Flight1/flight_1\";\nimport { RSRPs as RSRP1 } from \"../Data/Flight1/flight_1\";\nimport { flight_1 } from \"../Data/Flight1/flight_1\";\nimport { towers_1 } from \"../Data/Flight1/flight_1\";\nimport { towers } from \"../Data/Towers/Towers\";\nimport { changePoints_1 } from \"../Data/Flight1/flight_1\";\nimport { pack } from \"../Data/Packets/packets\";\nimport { PacketsChart } from \"../PacketsChart/PacketsChart\";\nimport { udpP } from \"../Data/Packets/packets\";\nconsole.log(udpP);\nconst treeData = [\n  {\n    value: \"flight_1\",\n    title: \"flight 1\",\n  },\n  {\n    value: \"flight_2\",\n    title: \"flight 2\",\n  },\n  {\n    value: \"flight_3\",\n    title: \"flight 3\",\n  },\n  {\n    value: \"flight_4\",\n    title: \"flight 4\",\n  },\n];\n\nfunction Flight() {\n  const [value, setValue] = useState(\"flight_1\");\n  const [SINRs, setSINRs] = useState(SINR1);\n  const onChange = (newValue) => {\n    if (newValue === \"flight_1\") {\n      setSINRs(SINR1);\n    }\n    setValue(newValue);\n  };\n  const [flightValue, setFlightValue] = useState(\n    window.localStorage.getItem(\"flightValue\") || \"tower\"\n  );\n\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  const setFlight = (e) => {\n    if (e.target.value !== flightValue) {\n      window.localStorage.setItem(\"flightValue\", e.target.value);\n      setFlightValue(e.target.value);\n      refreshPage();\n    }\n  };\n\n  return (\n    <div\n      style={{\n        padding: 20,\n        backgroundColor: \"#BDFFF6\",\n      }}\n    >\n      <h2>Flight</h2>\n      <div className={styles.treeContainer}>\n        <TreeSelect\n          showSearch\n          style={{\n            width: \"100%\",\n          }}\n          value={value}\n          dropdownStyle={{\n            maxHeight: 400,\n            overflow: \"auto\",\n          }}\n          placeholder=\"Please select\"\n          allowClear\n          treeDefaultExpandAll\n          onChange={onChange}\n          treeData={treeData}\n        />\n      </div>\n      <Radio.Group value={flightValue} onChange={setFlight}>\n        <Radio.Button value=\"tower\">tower</Radio.Button>\n        <Radio.Button value=\"sinr\">sinr</Radio.Button>\n        <Radio.Button value=\"rsrp\">RSRP</Radio.Button>\n        <Radio.Button value=\"udp\">UDP</Radio.Button>\n        <Radio.Button value=\"voice\">Voice</Radio.Button>\n      </Radio.Group>\n      <div className={styles.floatDown}>\n        <div className={styles.mapContainer}>\n          <GoogleMap\n            flight={flightValue === \"tower\" ? flight_1_towers : flight_1_sinr}\n            towers={towers}\n            activeTowers={towers_1}\n            changePoints={changePoints_1}\n            startPoint={startPoint}\n            endPoint={endPoint}\n          />\n        </div>\n        <div className={styles.displayContainer}>\n          <div className={styles.chartContainer}>\n            <Chart\n              sinr={RSRP1}\n              divide={[-50, -55, -60, -70]}\n              heading={\"RSRP\"}\n            />\n          </div>\n          <div className={styles.chartContainer}>\n            <Chart sinr={SINR1} divide={[20, 13, 0, -10]} heading={\"SINR\"} />\n          </div>\n          <div className={styles.chartContainer}>\n            <PacketsChart sinr={udpP} heading={\"SINR\"} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Flight;\n","import React, { Component } from 'react';\nimport Flight from './components/Flight/Flight';\n\nrequire('dotenv').config()\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" style={{backgroundColor: '#BDFFF6'}}>\n        <div className=\"App-header\">\n          <h1>Voltela Dashboard</h1>\n        </div>\n        <Flight />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}